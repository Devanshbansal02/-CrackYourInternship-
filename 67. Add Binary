class Solution {
public:
    void add(string &a, string b){
        int n=a.length(), m=b.length();
        int i=n-1,j=m-1, c=0;
        while(j>=0){
            if(c==0)
            {
                if((a[i]=='0' && b[j]=='1') || (a[i]=='1' && b[j]=='0')) a[i]='1';
                else if((a[i]=='0' && b[j]=='0')) a[i]='0';
                else if((a[i]=='1' && b[j]=='1')) {
                    a[i]='0'; 
                    c=1;
                }
            }
            else{
                 if((a[i]=='0' && b[j]=='1') || (a[i]=='1' && b[j]=='0')) {
                    a[i]='0';
                    c=1;
                }
                else if((a[i]=='0' && b[j]=='0')) {
                    a[i]='1';
                    c=0;
                }
                else if((a[i]=='1' && b[j]=='1')) {
                    a[i]='1'; 
                    c=1;
                }
            }
            j--;
            i--;
        }
        while(c==1 && i>=0){
            if(a[i]=='1'){
                a[i]='0';
                c=1;
            }
            else {
                a[i]='1';
                c=0;
            }
            i--;
        }
        if(i<=0 && c==1){
            a.insert(0, "1");
        }
    }
    string addBinary(string a, string b) {
        int n=a.length(), m=b.length();
        if(n>=m){
            add(a,b);
            return a;
        }
        else {
            add(b,a);
            return b;
        }
    }
};
